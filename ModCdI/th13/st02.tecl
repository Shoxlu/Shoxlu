anim { "enemy.anm"; "st02enm.anm"; }
ecli { "default.ecl"; "st02mbs.ecl"; "st02bs.ecl"; }
#include "main.tecl"

void MainBossSpell();

void MainMBossSpell();

void Phantom00()
{
	var A, B;
	anmSelect(2);
	anmSetSprite(0, 78);
	spec2(15);
	spec1(60);
	dropExtra(1, 3);
	dropExtra(2, 2);
	setInvuln(30);
!HL
	lifeSet(200);
!E 
	1;
!N 
	1;
!H 
	1;
!L 
	2;
!E 
	6;
!N 
	8;
!H 
	12;
!L 
	14;
!*
	@CreatePattern(0, 3, 25, 0, [-1], [-2], %A, 0f, 1f, 1.5f);  
!L 
	setDeath("Phantom00death");
!*
	while(1)
	{
		etOn(0);
		$B = 24 + (RAND % 4);
		etSprite(0, $B, 0);
		%A = %A + rad(10);
		etAngle(0, %A, 0f);
		diffWait(40, 30, 20, 20);
	}
}
void Phantom00death()
{
	var A, B;
	angleToPlayer(%A, 0f, 224f);
	$B = 0;
	@CreatePattern(0, 1, 16, $B, 1, 1, %A, 0f, 2f, 2f);
	times(15)
	{
		etOn(0);
		%A = %A + rad(30);
		etAngle(0, %A, 0f);
		$B = $B + 1;
		etSprite(0, 16, $B);
	}
}

void GirlRed01()
{
	var A;
	anmSelect(2);
	anmSetMain(0, 5);
	anmSetMain(1, 93);
	spec2(10);
	spec1(120);
	moveVel(rad(90), 3f);
	wait(30);
	moveVel(0f, 0f);
	dropExtra(2, 7);
	@GirlRed01_at();
	moveVel((RANDRAD / 2f), 0.5f);
	wait(100000);
}
void GirlRed01_at()
{
	var A;
!E
	2;
!N 
	3;
!H 
	4;
!L
	5;
!*
	//$A = 1 + (RAND % 6);
	@CreatePattern(0, 1, 21, 3, [-1], 1, rad(90), rad(20), 2f, 2f);
	etExSet(0, 0, 0, EX_WAIT, 30, NEG, NEGF,NEGF);
	etExSet(0, 1, 0, EX_SPECIAL, NEG, NEG, NEGF,NEGF);
	etExSub(0, 1, "GirlRed01_at1");
!ENH
	times(5)
	{
		etOn(0);
		wait(100);
	}
!L 
	times(3)
	{
	etOn(0);
	wait(100);
	etOn(0);
	wait(60);
	}
!*
}
void GirlRed01_at1()
{
	var A;
	//$A = 1 + (RAND % 15);
!E
	2;
!N 
	3;
!H 
	4;
!L 
	3;
!E
	1;
!N 
	3;
!H 
	5;
!L 
	4;
!*
	@CreatePattern(1, 2, 9, 1, [-1], [-2], 0f, rad(30), 0.5f, 0.25f);
	etExSet(1, 0, 0, EX_VELTIME, 40, NEG, 2f, NEGF);
	etOn(1);
}
void Phantom01()
{
	flagSet(2);
	anmSelect(2);
	anmSetSprite(0, 78);
	setInvuln(60);
	spec2(12);
	spec1(300);
	@Phantom01_at() async;
	moveCircle(0f, 0.2f, 10f, 1f);
	wait(60);
	spec2(12);
	spec1(360);
	wait(10000);
}
void Phantom02()
{
	flagSet(2);
	flagSet(4);
	flagSet(8);
	anmSelect(2);
	anmSetSprite(0, 80);
	//flagSet(16);
	setInvuln(60);
	@Phantom02_at() async;
	moveCircle(0f, 0.2f, 384f, -1f);
	wait(60);
	spec2(12);
	spec1(360);
	wait(400);
}
void Phantom01_at()
{
	var A, B;
	@CreatePattern(0, 1, 5, 5, 1, 1, 0f, 0f, 0f, 0f);
	diffF(%A, 0.025f, 0.035f, 0.075f, 0.035f);
	etExSet(0, 1, 0, EX_SETSPRITE, 5, 1, NEGF, NEGF);
	$B = 0;
	times(384)
	{
		etExSet(0, 0, 0, EX_WAIT, 400 - $B, NEG, NEGF, NEGF);
		etExSet(0, 2, 0, EX_ACCEL, 40, NEG, %A, RANDRAD);
		if(DIST_PLAYER >= 15f)
		{
			etOn(0);
		}
!E
		4;
!N 
		2;
!H 
		2;
!L 
		1;
!*
		$B = $B + [-1];
		diffWait(3, 2, 1, 1);
	}
}
void Phantom02_at()
{
	var A, B;
	@CreatePattern(1, 1, 5, 5, 1, 1, 0f, 0f, 0f, 0f);
	diffF(%A, 0.025f, 0.035f, 0.025f, 0.015f);
	etExSet(1, 1, 0, EX_SETSPRITE, 5, 1, NEGF, NEGF);
	$B = 0;
	times(384)
	{
		etExSet(1, 0, 0, EX_WAIT, 400 - $B, NEG, NEGF, NEGF);
		etExSet(1, 2, 0, EX_ACCEL, 40, NEG, %A, RANDRAD);
		if(DIST_PLAYER >= 15f)
		{
			etOn(1);
		}
!E
		4;
!N 
		3;
!H 
		2;
!L 
		1;
!*
		$B = $B + [-1];
		diffWait(4, 3, 2, 2);
	}
}
void ThiccKnivesFairy()
{
	var A, B;
	anmSelect(2);
	anmSetMain(0, 40);
	anmSelect(1);
	anmSetSprite(2, 109);
	movePosTime(40, 0, 0f, 128f);
	anmSetSprite(1, 53);
	setInvuln(340);
	wait(40);
	dropExtra(1, 20);
	dropExtra(2, 30);
	dropExtra(12, 2);
	dropExtra(10, 2);
	dropExtra(11, 5);
	@CreatePattern(0, 1, 32, 0, 1, 1, 0f, 0f, 4f, 4f);
	etExSet(0, 0, 0, EX_INVULN, 99999, NEG, NEGF, NEGF);
	etExSet(0, 1, 0, EX_WAIT, 25, NEG, NEGF, NEGF);
	etExSet(0, 2, 0, EX_VEL, NEG, NEG, NEGF, 0f);
	etExSet(0, 3, 0, EX_SETSPRITE, 32, 1, NEGF,NEGF);
	//etExSet(0, 4, 0, EX_WAIT, 60, NEG, NEGF, NEGF);
	etExSet(0, 4, 0, EX_SPECIAL, NEG, NEG, NEGF, NEGF);
	etExSub(0, 4, "SubKnivesFairy");
	etExSet(0, 5, 0, EX_WAIT, 120, NEG, NEGF, NEGF);
	etExSet(0, 6, 0, EX_DELETE, 1, NEG, NEGF, NEGF);
	diffI($A, 8, 10, 12, 14);
	%B = rad(360) / _f($A); 
	times($A)
	{
		etAngle(0, %B, 0f);
		etOn(0);
		%B = %B + (rad(360) / _f($A));
		F0 = ABS_X + cos(%B) * (4f * 25f);
		F1 = ABS_Y + sin(%B) * (4f * 25f);
	}
	diffWait(160,140, 100, 80);
	%B = rad(360) / _f($A) + rad(30); 
	times(5)
	{
		times($A)
		{
			etAngle(0, %B, 0f);
			etOn(0);
			%B = %B + (rad(360) / _f($A));
			F0 = ABS_X + cos(%B) * (4f * 25f);
			F1 = ABS_Y + sin(%B) * (4f * 25f);
		}
		%B = %B + rad(30);
		diffWait(160,140, 100, 80);
	}
	wait(10000);
}

void SubKnivesFairy()
{
	var A, B, C;
	@CreatePattern(1, 1, 21, 3, 1, 1, 0f, 0f, 0f, 0f);
	etExSet(1, 0, 0, EX_INVULN, 9999, NEG, NEGF, NEGF);
	etExSet(1, 1, 0, EX_WAIT, 120, NEG, NEGF, NEGF);
	etExSet(1, 3, 0, EX_SETSPRITE, 21, 2, NEGF, NEGF);
	etExSet(1, 4, 0, EX_WAIT, 50, NEG, NEGF, NEGF);
	etExSet(1, 5, 0, EX_SETSPRITE, 21, 1, NEGF, NEGF);
	%A = rad(0);
		mathAngle(%B, F0, F1, F0 - 10f, F1 + 20f); 
		etAngle(1, %B,0f); 
		etOffsetRad(1, rad(60), 15f);
		etExSet(1, 2, 0, EX_ANGLE_ACCEL, 60, NEG, 0.0322222f, RANDRAD/270f);
		etOn(1);
		wait(3);
		mathAngle(%B, F0, F1, F0 + 10f, F1 + 20f); 
		etAngle(1, %B, 0f); 
		//etExSet(1, 2, 0, EX_ANGLE_ACCEL, 60, NEG, 0.0322222f, RANDRAD/400f);
		etOffsetRad(1, rad(120), 15f);
		etOn(1);
		wait(3);
		mathAngle(%B, F0, F1, F0 - 10f, F1 - 20f); 
		etAngle(1, %B,0f); 
		etExSet(1, 2, 0, EX_ANGLE_ACCEL, 60, NEG, 0.0322222f, RANDRAD/270f);
		etOffsetRad(1, rad(-60), 15f);
		etOn(1);
		wait(3);
		mathAngle(%B, F0, F1, F0 + 10f, F1 - 20f); 
		etAngle(1, %B, 0f); 
		//etExSet(1, 2, 0, EX_ANGLE_ACCEL, 60, NEG, 0.322222f, RANDRAD/400f);
		etOffsetRad(1, rad(-120), 15f);
		etOn(1);
		wait(3);
		mathAngle(%B, F0, F1, F0 - 20f, F1 + 10f); 
		etAngle(1, %B,0f); 
		etExSet(1, 2, 0, EX_ANGLE_ACCEL, 60, NEG, 0.0322222f, RANDRAD/270f);
		etOffsetRad(1, rad(-150), 15f);
		etOn(1);
		wait(3);
		mathAngle(%B, F0, F1, F0 - 20f, F1 - 10f); 
		etAngle(1, %B, 0f); 
		//etExSet(1, 2, 0, EX_ANGLE_ACCEL, 60, NEG, 0.0322222f,RANDRAD/400f);
		etOffsetRad(1, rad(150), 15f);
		etOn(1);
		wait(3);
		mathAngle(%B, F0, F1, F0 + 20f, F1 + 10f); 
		etAngle(1, %B,0f); 
		etOffsetRad(1, rad(-30), 15f);
		etExSet(1, 2, 0, EX_ANGLE_ACCEL, 60, NEG, 0.0322222f, RANDRAD/270f);
		etOn(1);
		wait(3);
		mathAngle(%B, F0, F1, F0 + 20f, F1 - 10f); 
		//etExSet(1, 2, 0, EX_ANGLE_ACCEL, 60, NEG, 0.0322222f, RANDRAD/400f);
		etAngle(1, %B, 0f); 
		etOffsetRad(1, rad(30), 15f);
		etOn(1);
		wait(3);
}

void GirlRed02()
{
	var A, B, C, D;
	flagSet(4);
	dropExtra(1, 3);
	dropExtra(2, 2);
	anmSelect(2);
	anmSetMain(0, 5);
	spec2(7);
	spec1(160);
	moveVel(GF0, 3f);
	wait(GI0);
	//GI0 = GI0 - 20;
	moveVel(0f, 0f);
	@CreatePattern(0, 1, 6, 3, 1, 1, rad(90), 0f, 0f, 0f);
	etExSet(0, 0, 0, EX_WAIT, 60, NEG, NEGF, NEGF);
	etExSet(0, 1, 0, EX_ACCEL, 60, NEG, 0.05f, rad(90));
	diffI($A, 10, 15, 15, 15);
	diffF(%C, 15f, 20f, 90f, 80f); 
	$D = 0;
	$B = 0;
	wait(15);
	times($A)
	{
		etOffsetRad(0, %B, %C);
		$D = $D + 1;
		etOn(0);
		%B = %B + (rad(360) / _f($A));
		etSprite(0, 6, $D);
	}
	wait(60);
	moveVel(GF0, 2f);
	wait(600);
}

void GirlBlue01()
{
	var A, B, C, D;
	flagSet(4);
	dropExtra(1, 3);
	dropExtra(2, 2);
	//dropExtra(11, 4);
	//setInvuln(GI0);
	anmSelect(2);
	anmSetMain(0, 0);
	spec2(7);
	spec1(160);
	moveVel(GF1, 3f);
	wait(GI1);
//	GI0 = GI0 - 20;
	moveVel(0f, 0f);
	@CreatePattern(0, 1, 6, 3, 1, 1, rad(90), 0f, 0f, 0f);
	etExSet(0, 0, 0, EX_WAIT, 60, NEG, NEGF, NEGF);
	etExSet(0, 1, 0, EX_ACCEL, 60, NEG, 0.05f, rad(90));
	diffI($A, 10, 15, 15, 15);
	diffF(%C, 15f, 20f, 90f, 80f); 
	$D = 0;
	wait(15);
	times($A)
	{
		etOffsetRad(0, %B, %C);
		$D = $D + 1;
		etOn(0);
		%B = %B + (rad(360) / _f($A));
		etSprite(0, 6, $D);
	}
	wait(60);
	moveVel(GF1, 2f);
	wait(600);
}
void Phantom03()
{
	var A, B, C;
	anmSelect(2);
	anmSetSprite(0, 78);
	setInvuln(180);
	dropExtra(2, 5);
	dropExtra(10, 1);
	@CreatePattern(0, 0, 21, 1, 1, 1, 0f, 0f, 3f, 3f);
	angleToPlayer(%A, ABS_X, ABS_Y);
	%A = %A + rad(90);
	etExSet(0, 0, 0, EX_WAIT, 5, NEG, NEGF, NEGF);
	etExSet(0, 1, 0, EX_VEL, NEG, NEG, %A, 2.5f);
	etExSet(0, 2, 0, EX_WAIT, 0, NEG, NEGF, NEGF);
	etExSet(0, 3, 0, EX_SETSPRITE, 21, 3, NEGF, NEGF);
	etExSet(0, 4, 0, EX_ANGLE_ACCEL, 69, NEG, 0f, rad(4));
	etExSet(0, 5, 0, EX_SETSPRITE, 21, 1, NEGF, NEGF);
	@CreatePattern(1, 0, 21, 1, 1, 1, 0f, 0f, 3f, 3f);
	%B = %A - rad(90);
	etExSet(1, 0, 0, EX_WAIT, 5, NEG, NEGF, NEGF);
	etExSet(1, 1, 0, EX_VEL, NEG, NEG, %B, 2.5f);
	etExSet(1, 2, 0, EX_WAIT, 0, NEG, NEGF, NEGF);
	etExSet(1, 3, 0, EX_SETSPRITE, 21, 3, NEGF, NEGF);
	etExSet(1, 4, 0, EX_ANGLE_ACCEL, 69, NEG, 0f, rad(-4));
	etExSet(1, 5, 0, EX_SETSPRITE, 21, 1, NEGF, NEGF);
!E 
	4f;
!N
	5f;
!H 
	6f;
!L 
	7f;
!*
	etExSet2(1, 6, 1, 16, 1, 1, 1, -999999, 0.0f, [-1.0f], -999999.0f, -999999.0f);
!E 
	4f;
!N
	5f;
!H 
	6f;
!L 
	7f;
!*
	etExSet2(0, 6, 1, 16, 1, 1, 1, -999999, 0.0f, [-1.0f], -999999.0f, -999999.0f);
	wait(100);
	times(30)
	{
	angleToPlayer(%A, ABS_X, ABS_Y);
	%A = %A + rad(90);
	%B = %A - rad(180);
	etExSet(0, 1, 0, EX_VEL, NEG, NEG, %A, 2.5f);
	etExSet(1, 1, 0, EX_VEL, NEG, NEG, %B, 2.5f);
	etExSet(1, 4, 0, EX_ANGLE_ACCEL,69, NEG, 0f, rad(-4));
	etExSet(0, 4, 0, EX_ANGLE_ACCEL,69, NEG, 0f, rad(4));
	etOn(0);
	etOn(1);
	wait(20);
	}
	wait(10000);
}
void GirlTest()
{
    var A, B;
    $A = 100;
    anmSelect(2);
    anmSetMain(0, 5);
    flagSet(64);
    flagSet(2);
    setHurtbox(24.0f, 24.0f);
    setHitbox(16.0f, 16.0f);
    dropClear();
   // dropExtra(14, 30000);
    dropExtra(14, 100);
	dropExtra(11, 90);
    while(1)
    {
		dropExtra(14, 90);
		dropExtra(11, 100);
		wait(1);
		dropItems();
    }
    debug900(4);
    //moveVel(1.5707964f, 6.0f);
    //moveVelTime(10, 0, 1.5707964f, 0.0f);
+10: //10
   // delete();
	etNew(0);
	etAim(0, 2);
	etSprite(0, 4, 2);
	etCountD(0, 1, 32, 3, 5, 1, 1, 1, 1);
	etAngle(0, 0.0f, 0.032724924f);
	etSpeedD(0, 2.0f, 2.0f, 3.0f, 5.5f, 1.0f, 1.0f, 1.0f, 2.0f);
	etExSet(0, 0, 1, 2, 1, -999999, -999999.0f, -999999.0f);
	etExSet(0, 1, 1, 1, -999999, -999999, -999999.0f, -999999.0f);
	etOn(0);
	goto GirlTest_408 @ 10;
GirlTest_388:
	wait(1000);
GirlTest_408:
    if (1) goto GirlTest_388 @ 10;
+30: //40
    moveVelTime(100, 0, 0.0f, 2.0f);
    goto GirlTest_528 @ 40;
GirlTest_508:
    wait(1000);
GirlTest_528:
    if (1) goto GirlTest_508 @ 40;
    etNew(0);
    etAim(0, 2);
    etSprite(0, 4, 2);
    etCountD(0, 1, 32, 3, 5, 1, 1, 1, 1);
    etAngle(0, 0.0f, 0.032724924f);
    etSpeedD(0, 2.0f, 2.0f, 3.0f, 5.5f, 1.0f, 1.0f, 1.0f, 2.0f);
    etExSet(0, 0, 1, 2, 1, -999999, -999999.0f, -999999.0f);
    etExSet(0, 1, 1, 1, -999999, -999999, -999999.0f, -999999.0f);
    etOn(0);
    $B = $A;
    goto GirlTest_996 @ 40;
GirlTest_956:
    wait(100);
    etOn(0);
GirlTest_996:
    if ($B--) goto GirlTest_956 @ 40;
    goto GirlTest_1084 @ 40;
GirlTest_1064:
    wait(1000);
GirlTest_1084:
    if (1) goto GirlTest_1064 @ 40;
    delete();
}

void LogoEnemy()
{
    wait(950);
    stageLogo();
    return;
}

void MainBoss()
{
    dialogWait();
    enmCreateA("Boss", 144.0f, -16.0f, 40, 1000, 1);
    dialogWait();
    setChapter(6);
    bossWait();
    setChapter(7);
+60: //60
    dialogRead(1);
    dialogWait();
    return;
    return;
}

void MainBossDebug()
{
    setChapter(5);
+10: //10
    dialogRead(0);
    @MainBoss();
    return;
}

void MainBossDebug2()
{
    setChapter(5);
+10: //10
    dialogRead(-1);
    @MainBoss();
    return;
}

void MainFront()
{
    @MainSub00();
	wait(150);
	@MainSub01();
	wait(200);
	@MainSub02();
	wait(400);
	@MainSub03();
	wait(400);
}

void MainLatter()
{
	@MainSub04();
	wait(180);
	@MainSub06();
	@MainSub07();
	wait(300);
	@MainSub03();
	wait(760);
}

void MainMBoss()
{
    setChapter(4);
    enmCreateA("MBoss", 112.0f, -32.0f, 40, 1000, 1);
	if(SHOTTYPE == 1)
	{
	+10:
	dialogRead(2);
	dialogWait();
	}
    wait(1600);
    @MainSub05();
    return;
}

void MainMBossDebug()
{
    @MainMBoss();
    goto MainMBossDebug_112 @ 0;
MainMBossDebug_92:
    wait(1000);
MainMBossDebug_112:
    if (1) goto MainMBossDebug_92 @ 0;
    return;
}

void MainMsgDebug()
{
+10: //10
    dialogRead(0);
    dialogWait();
+1: //11
    dialogWait();
+60: //71
    dialogRead(1);
    dialogWait();
    goto MainMsgDebug_164 @ 4071;
MainMsgDebug_148:
+4000: //4071
    nop();
MainMsgDebug_164:
    if (1) goto MainMsgDebug_148 @ 71;
    return;
}

void MainSub00()
{
	enmCreateA("Phantom00", 0f, 224f, 100, 10, 13);
	wait(120);
}

void MainSub01()
{
    enmCreate("GirlRed01", 160f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 80f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 0f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -80f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -160f, -30f, 150, 100, 1);
	wait(200);
    enmCreate("GirlRed01", 120f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 0f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -120f, -30f, 150, 100, 1);
	wait(200);
	enmCreate("GirlRed01", -120f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -60f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 60f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 120f, -30f, 150, 100, 1);
	wait(200);
}

void MainSub02()
{
	enmCreateA("Phantom01", 0f, 224f, 600, 10, 1);
	wait(500);
	enmCreateA("Phantom02", 0f, 224f, 600, 10, 1);
	wait(600);
	enmCreateA("Phantom01", 0f, 224f, 400, 10, 1);
	enmCreateA("Phantom02", 0f, 224f, 400, 10, 1);
	wait(500);
	enmCreate("GirlRed01", 120f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 0f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -120f, -30f, 150, 100, 1);
	wait(200);
	enmCreate("GirlRed01", -120f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -60f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 60f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 120f, -30f, 150, 100, 1);
	wait(200);
	enmCreate("GirlRed01", 160f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 80f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 0f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -80f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -160f, -30f, 150, 100, 1);
	wait(200);
	//enmCreateA("GirlTest", 0f, 224f, 10, -1, 1);

}


void MainSub03()
{
	enmCreateA("ThiccKnivesFairy", 0f, -40f, 500, 100, 10);
}

void MainSub04()
{
	var A;
	$A = 0;
	GF0 = rad(20);
	GI0 = 130;
	times(14)
	{
		enmCreateAF("GirlRed02", -210f, 60f, 100, 50, 1);
		wait(40);
		GI0 = GI0 - 10;
		$A = $A + 1;
		if($A == 8)
		{
			GF1 = rad(160);
			GI1 = 130;
			@MainSub04B() async;
		}
	}
	wait(120);
	GF0 = rad(160);
	GF1 = rad(20);
	GI0 = 130;
	GI1 = 130;
	wait(120);
	times(14)
	{
		enmCreateAF("GirlBlue01", -210f, 60f, 100, 50, 1);
		enmCreateAF("GirlRed02", 210f, 60f, 100, 50, 1);
		wait(40);
		GI0 = GI0 - 10;
		GI1 = GI1 - 10;
	}
	wait(120);
	GF1 = rad(160);
	GF0 = rad(20);
	GI0 = 130;
	GI1 = 130;
	times(14)
	{
		enmCreateAF("GirlBlue01", 210f, 60f, 100, 50, 1);
		enmCreateAF("GirlRed02", -210f, 60f, 100, 50, 1);
		wait(40);
		GI0 = GI0 - 10;
		GI1 = GI1 - 10;
	}
	enmCreate("GirlRed01", 120f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", 0f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", -120f, -30f, 250, 100, 1);
	wait(200);
	enmCreate("GirlRed01", -120f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", -60f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", 60f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", 120f, -30f, 250, 100, 1);
	wait(200);
	enmCreate("GirlRed01", 160f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", 80f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", 0f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", -80f, -30f, 250, 100, 1);
    enmCreate("GirlRed01", -160f, -30f, 250, 100, 1);
	wait(200);
	GF0 = rad(160);
	GI0 = 130;
	GF1 = rad(20);
	GI1 = 130;
	$A = 0;
	wait(120);
	times(14)
	{
		enmCreateAF("GirlRed02", 210f, 60f, 100, 50, 1);
		wait(40);
		GI0 = GI0 - 10;
		$A = $A + 1;
		if($A == 11)
		{
			@MainSub04C() async;
		}
	}
	wait(120);
	GF1 = rad(160);
	GF0 = rad(20);
	GI0 = 130;
	GI1 = 130;
	times(14)
	{
		enmCreateAF("GirlBlue01", 210f, 60f, 100, 50, 1);
		enmCreateAF("GirlRed02", -210f, 60f, 100, 50, 1);
		wait(40);
		GI0 = GI0 - 10;
		GI1 = GI1 - 10;
	}
}

void MainSub05()
{
	GF0 = rad(90);
	GI0 = 80;
    enmCreateF("GirlRed02", -128.0f, 0.0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 0.0f, 0.0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 128.0f, 0f, 240, 1000, 1);
    wait(240);
    enmCreateF("GirlRed02", -144.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", -48.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 48.0f,0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 144.0f, 0f, 240, 1000, 1);
    wait(240);
    enmCreateF("GirlRed02", -160.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", -80.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 0.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 80.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 160.0f, 0f, 240, 1000, 1);
    wait(240);
    enmCreateF("GirlRed02", -128.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 0.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 128.0f, 0f, 240, 1000, 1);
    wait(240);
    enmCreateF("GirlRed02", -144.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", -48.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 48.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 144.0f, 0f, 240, 1000, 1);
    wait(240);
    enmCreateF("GirlRed02", -160.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", -80.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 0.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 80.0f, 0f, 240, 1000, 1);
    enmCreateF("GirlRed02", 160.0f, 0f, 240, 1000, 1);
    return;
}

void MainSub06()
{
	enmCreate("GirlRed01", 120f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 0f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -120f, -30f, 150, 100, 1);
	wait(200);
	enmCreate("GirlRed01", -120f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -60f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 60f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 120f, -30f, 150, 100, 1);
	wait(200);
	enmCreate("GirlRed01", 160f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 80f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", 0f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -80f, -30f, 150, 100, 1);
    enmCreate("GirlRed01", -160f, -30f, 150, 100, 1);
	wait(200);
}

void MainSub04B()
{
	times(14)
	{
		enmCreateAF("GirlBlue01", 210f, 60f, 100, 50, 1);
		wait(40);
		GI1 = GI1 - 10;
	}
}

void MainSub04C()
{
	times(14)
	{
		enmCreateAF("GirlBlue01", -210f, 60f, 100, 50, 1);
		wait(40);
		GI1 = GI1 - 10;
	}
}

void MainSub07()
{
	enmCreateA("Phantom03", 0f, 120f, 400, 100, 2);
	wait(420);
	enmCreateA("Phantom03", -92f, 120f, 400, 100, 2);
	enmCreateA("Phantom03", 92f, 120f, 400, 100, 2);
	wait(460);
	GF1 = rad(160);
	GF0 = rad(20);
	GI0 = 130;
	GI1 = 130;
	enmCreateA("Phantom03", 0f, 200f, 300, 100, 2);
	times(7)
	{
		enmCreateAF("GirlBlue01", 210f, 60f, 100, 50, 1);
		enmCreateAF("GirlRed02", -210f, 60f, 100, 50, 1);
		wait(40);
		GI0 = GI0 - 20;
		GI1 = GI1 - 20;
	}
}

void MapleEnemy()
{
    flagSet(32);
    goto MapleEnemy_124 @ 0;
MapleEnemy_80:
    anmPlayAbs(1, 92);
    wait(5);
MapleEnemy_124:
    if (1) goto MapleEnemy_80 @ 0;
    delete();
}


void main()
{
    var A, B;
    flagSet(32);
    setChapter(0);
    enmMapleEnemy("MapleEnemy", 0, 0, 100, 1000, 0);
    unless ($SPELL_ID >= 0) goto main_544 @ 0;
    unless (($SPELL_ID >= 14) && ($SPELL_ID <= 17)) goto main_420 @ 0;
    @MainMBossSpell();
    goto main_456 @ 0;
main_420:
    @MainBossSpell();
main_456:
    goto main_500 @ 0;
main_480:
    wait(1000);
main_500:
    if (1) goto main_480 @ 0;
main_544:
    debug22(1, "MainMBossDebug");
    debug22(2, "MainBossDebug");
    debug22(3, "MainBossDebug2");
    debug22(4, "MainMsgDebug");
    debug22(5, "MainLatter");
    @LogoEnemy() async;
+60: //60
    nop();
    @MainFront();
	wait(300);
    @MainMBoss();
    wait(160);
    @MainLatter();
    setChapter(5);
    dialogRead(0);
    setChapter(6);
    @MainBoss();
    goto main_1040 @ 60;
main_1020:
    wait(1000);
main_1040:
    if (1) goto main_1020 @ 60;
    delete();
}